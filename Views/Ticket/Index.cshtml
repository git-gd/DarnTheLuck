@using DarnTheLuck.Helpers;
@using DarnTheLuck.ViewModels;

@model PaginatedList<TicketListViewModel>

@{
    string[][] columns = new string[][] {
                new string []{ "Status", "status" },
                new string []{ "Created", "created"},
                new string []{ "Model", "model" },
                new string []{ "Serial #", "serial" },
                new string []{ "Ticket #", "ticket" }
    };
}
<form method="post" asp-controller="Ticket" asp-action="Index">
    <div class="container-fluid">
        <label>Search:<input type="text" name="search" /></label>
        <button>Submit</button>
    </div>
    <div class="container collapse show" id="searchBar">
        <label>Fields:<input type="checkbox" /></label>
    </div>
</form>
<div class="container-fluid overflow-auto">
    <div class="row ticket-head text-center flex-nowrap text-nowrap">
        @foreach (string[] col in columns)
        {
            if (ViewBag.sort == col[1])
            {
                string flipSort = string.IsNullOrEmpty(ViewBag.sortDir) ? "descending" : string.Empty;
                <div class="col d-txt">
                    <a class="text-decoration-none" style="color:@(string.IsNullOrEmpty(ViewBag.sortDir) ? "#ffff00" : "#ff8000")" asp-controller="Ticket" asp-action="Index" asp-route-pageSize="@ViewBag.pageSize" asp-route-sort="@col[1]" asp-route-sortDir="@flipSort">@col[0]</a>
                </div>
            }
            else
            {
                <div class="col d-txt">
                    <a class="text-decoration-none" style="color:white" asp-controller="Ticket" asp-route-pageSize="@ViewBag.pageSize" asp-action="Index" asp-route-sort="@col[1]">@col[0]</a>
                </div>
            }
        }
    </div>
    @foreach (TicketListViewModel ticket in Model)
    {
        <a asp-controller="Ticket" asp-action="Details" asp-route-Id="@ticket.TicketId" class="text-decoration-none text-dark ticket-created">
            <div class="row text-center ticket-round border border-dark t-@ticket.Status">
                <div class="col d-txt">@ticket.Status</div>
                <div class="col d-txt">@ticket.Created.ToString("MM/dd/yy")</div>
                <div class="col d-txt">@ticket.Model</div>
                <div class="col d-txt">@ticket.Serial</div>
                <div class="col d-txt">@ticket.TicketId</div>
            </div>
        </a>
    }
</div>
@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}
<div class="container font-weight-bold">
    <a asp-action="Index"
       asp-route-sort="@ViewBag.sort"
       asp-route-sortDir="@ViewBag.sortDir"
       asp-route-pageSize="@ViewBag.pageSize"
       asp-route-page="@(Model.PageIndex - 1)"
       class="btn btn-default font-weight-bold @prevDisabled">
        Previous
    </a>
    <a asp-action="Index"
       asp-route-sort="@ViewBag.sort"
       asp-route-sortDir="@ViewBag.sortDir"
       asp-route-pageSize="@ViewBag.pageSize"
       asp-route-page="@(Model.PageIndex + 1)"
       class="btn btn-default font-weight-bold @nextDisabled">
        Next
    </a>
    <form method="Get" asp-action="Index">
        <input type="hidden" name="sort" value="@ViewBag.sort" />
        <input type="hidden" name="sortDir" value="@ViewBag.sortDir" />
        <label for="pageSize">Records Per Page:</label>
        <select name="pageSize" id="pageSize" onchange="this.form.submit()">
            <option value="1" selected="@(ViewBag.pageSize==1)">1</option>
            <option value="3" selected="@(ViewBag.pageSize==3)">3</option>
            <option value="5" selected="@(ViewBag.pageSize==5)">5</option>
            <option value="10" selected="@(ViewBag.pageSize==10)">10</option>
        </select>
    </form>
</div>
<hr />
<div class="text-center">
    <h1><a asp-controller="Ticket" asp-action="Create">Create New Ticket</a></h1>
</div>