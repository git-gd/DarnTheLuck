@using DarnTheLuck.ViewModels
@model TicketViewModel
@if (Model == null)
{
    <h1 class="text-center">No Details</h1>
}
else
{
    <div class="container ticket-round border bg-light shadow">

        <div class="card-header bg-dark text-white mt-3">
            <div class="row">
                <div class="col-2 d-txt font-weight-bold">Ticket:</div>
                @if (User.IsInRole("Admin"))
                {
                    <div class="col-2">
                        <form method="post" asp-controller="Ticket" asp-action="DeleteTicket" onsubmit="return document.getElementById('Id').value == document.getElementById('confirm').value">
                            <input type="hidden" name="Id" id="Id" value="@Model.TicketId" />
                            <input type="hidden" name="confirm" id="confirm" value="0" />
                            <button class="ticket-round btn-danger d-txt" onclick="document.getElementById('confirm').value = prompt('Confirm the Ticket Number to DELETE: ')">Delete Ticket @Model.TicketId</button>
                        </form>
                    </div>
                }
            </div>
        </div>
        <div class="card-body">
            <div class="row ticket-round border border-dark t-@Model.Status">
                <div class="col-2 d-txt">Status</div>
                @if (User.IsInRole("Technician"))
                {
                    <div class="col-2 d-txt">
                        <form method="post" asp-controller="Ticket" asp-action="UpdateStatus" asp-route-Id="@Model.TicketId">
                            <select name="status" onchange="if (document.getElementById('Ajax') !== null) { toggleDetails(@Model.TicketId, this); } else { this.form.submit(); }" class="bg-transparent border-0 font-weight-bold">
                                @foreach (TicketStatus status in ViewBag.ticketStatusList)
                                {
                                    <option value="@status.Id" selected="@(Model.Status == status.Name)">@status.Name</option>
                                }
                            </select>
                        </form>
                    </div>}
                else
                {
                    <div class="col d-txt">@Model.Status</div>
                }
            </div>
            <div class="row ticket-round border border-dark">
                <div class="col-2 d-txt">Ticket #</div><div class="col d-txt">@Model.TicketId</div>
            </div>
            <div class="row ticket-round border border-dark">
                <div class="col-2 d-txt">Created</div><div class="col d-txt">@Model.Created</div>
            </div>
            <div class="row ticket-round border border-dark">
                <div class="col-2 d-txt">Notes</div>
                @if (Model.IsOwner && Model.Status != "Shipped")
                {
                    <div class="col">
                        <form method="post" id="statFrm" asp-controller="Ticket" asp-action="UpdateTicket" asp-route-Id="@Model.TicketId">
                            <textarea class="form-control border-0 o-txt" name="notes" onchange="if (document.getElementById('Ajax') !== null) { toggleDetails(@Model.TicketId, this); } else { this.form.submit(); }">@Model.TicketNotes</textarea>
                        </form>
                    </div>
                }
                else
                {
                    <div class="col o-txt">@Model.TicketNotes</div>
                }
                @*TODO: Remove the old Note code, create a list of notes, allow others to add new notes or edit their notes*@
            </div>
        </div>
        <div class="card-header bg-dark text-white">
            <div class="d-txt font-weight-bold">Device:</div>
        </div>
        <div class="card-body">
            <div class="row ticket-round border border-dark">
                <div class="col-2 d-txt">Model</div><div class="col d-txt">@Model.Model</div>
            </div>
            <div class="row ticket-round border border-dark">
                <div class="col-2 d-txt">Serial #</div><div class="col d-txt">@Model.Serial</div>
            </div>
        </div>
        <div class="card-header bg-dark text-white">
            <div class="d-txt font-weight-bold">Contact:</div>
        </div>
        <div class="card-body">
            <div class="row ticket-round border border-dark">
                <div class="col-2 d-txt">Name</div><div class="col d-txt">@Model.ContactName</div>
            </div>
            <div class="row ticket-round border border-dark">
                <div class="col-2 d-txt">Phone</div><div class="col d-txt">@Model.ContactPhone</div>
            </div>
            <div class="row ticket-round border border-dark">
                <div class="col-2 d-txt">Email</div><div class="col d-txt">@Model.ContactEmail</div>
            </div>
        </div>
        <div class="card-header bg-dark text-white">
            <div class="form-inline d-txt font-weight-bold">
                Technician:@if (User.IsInRole("Technician"))
                {
                <div class="col d-txt">
                    <button class="btn btn-danger d-txt font-weight-bold" onclick="fetch('/Ticket/UpdateTech/@Model.TicketId', { method: 'post' }).then(response => response.json()).then(data => {document.getElementById('techName@(Model.TicketId)').innerHTML = data.name; document.getElementById('techEmail@(Model.TicketId)').innerHTML = data.email;}).catch((error) => {console.error('Error:', error);});">Claim Ticket</button>
                </div>
                }
            </div>
        </div>
        <div class="card-body">
            <div class="row ticket-round border border-dark">
                <div class="col-2 d-txt">Name</div><div id="techName@(Model.TicketId)" class="col d-txt">@Model.TechName</div>
            </div>
            <div class="row ticket-round border border-dark">
                <div class="col-2 d-txt">Email</div><div id="techEmail@(Model.TicketId)" class="col d-txt">@Model.TechEmail</div>
            </div>
        </div>
    </div>
}
